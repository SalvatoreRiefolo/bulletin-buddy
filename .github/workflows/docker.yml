name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - context: ./bulletin-buddy-gateway
            image: bulletin-buddy-gateway
          - context: ./bulletin-buddy-client-service
            image: bulletin-buddy-client-service
          - context: ./bulletin-buddy-post-service
            image: bulletin-buddy-post-service
          - context: ./bulletin-buddy-authentication-service
            image: bulletin-buddy-authentication-service
          - context: ./bulletin-buddy-comment-service
            image: bulletin-buddy-comment-service
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ matrix.image }}

      - name: Extract module version
        uses: avides/actions-project-version-check@v1.3.0
        id: get_project_version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file-to-check: ${{ matrix.context }}/pom.xml

      - name: Log metadata
        run:
          echo "Version for ${{ matrix.image }} is ${{ steps.get_project_version.outputs.version }}"
          echo "Tags for ${{ matrix.image }} are ${{ steps.meta.outputs.tags }}"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/salvatoreriefolo/${{ matrix.image }}:latest
            ${{ env.REGISTRY }}/salvatoreriefolo/${{ matrix.image }}:${{ steps.get_project_version.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
