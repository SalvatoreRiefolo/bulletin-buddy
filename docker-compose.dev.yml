version: '3'

networks:
  apps:
    driver: bridge
  db:
    driver: bridge

volumes:
  pg-data:
  pgadmin-data:
  consul_config_data:
  consul_data:

services:

  gateway:
    image: ase/bulletin-gateway
    build: bulletin-buddy-gateway
    container_name: gateway
    networks:
      - apps
    ports:
      - '8080:8080'
    environment:
      - |
        JAVA_TOOL_OPTIONS=
        -Dpostservice.url=http://postservice:8081
        -Dauthenticationservice.url=http://authenticationservice:8082
        -Dcommentservice.url=http://commentservice:8083
        -Dclientservice.url=http://clientservice:8085
        -Dspring.cloud.consul.host=consul_container
    depends_on:
      - consul
    extra_hosts:
      - "local-post-service:host-gateway"
      - "local-comment-service:host-gateway"
      - "local-authentication-service:host-gateway"

  bulletin-buddy-post-service:
    image: ase/bulletin-post-service
    build: bulletin-buddy-post-service
    # container_name: post-service
    hostname: postservice
    environment:
      - |
        JAVA_TOOL_OPTIONS=
        -Dspring.cloud.consul.host=consul_container
        -Dspring.cloud.consul.port=8500
        -Dspring.datasource.url=jdbc:postgresql://db:5433/postgres_db
        -Dspring.datasource.username=root
        -Dspring.datasource.password=root
        -Dspring.jpa.hibernate.ddl.auto=update
        -Dspring.jpa.hibernate.ddl=false
#    ports:
#      - "8081:8081"
    restart: on-failure
    depends_on:
      - consul
      - db
    networks:
      - apps
      - db
    deploy:
      mode: replicated
      replicas: 2

  bulletin-buddy-authentication-service:
    image: ase/bulletin-authentication-service
    build: bulletin-buddy-authentication-service
    # container_name: authentication-service
    hostname: authenticationservice
#    ports:
#      - "8082:8082"
    restart: on-failure
    depends_on:
      - consul
    environment:
      - |
        JAVA_TOOL_OPTIONS=
        -Dspring.cloud.consul.host=consul_container
        -Dspring.cloud.consul.port=8500
    networks:
      - apps
    deploy:
      mode: replicated
      replicas: 2

  bulletin-buddy-comment-service:
    image: ase/bulletin-comment-service
    build: bulletin-buddy-comment-service
    # container_name: comment-service
    hostname: commentservice
#    ports:
#      - "8083:8083"
    restart: on-failure
    depends_on:
      - db
      - consul
    environment:
      - |
        JAVA_TOOL_OPTIONS=
        -Dspring.cloud.consul.host=consul_container
        -Dspring.cloud.consul.port=8500
        -Dspring.datasource.url=jdbc:postgresql://db:5433/postgres_db
        -Dspring.datasource.username=root
        -Dspring.datasource.password=root
        -Dspring.jpa.hibernate.ddl.auto=update
        -Dspring.jpa.hibernate.ddl=false
    networks:
      - apps
      - db
    deploy:
      mode: replicated
      replicas: 2

  bulletin-buddy-client-service:
    image: ase/bulletin-client-service
    build: bulletin-buddy-client-service
    container_name: client-service
    hostname: clientservice
    ports:
      - "8085:8085"
    restart: on-failure
    networks:
      - apps

  consul:
    image: consul:1.9.5
    container_name: consul_container
    hostname: consul_container
    ports:
      - '8500:8500'
    networks:
      - apps
    volumes:
      - consul_config_data:/consul/config
      - consul_data:/consul/data
    command: agent -server -dev -ui -ui-content-path=/devops/consul/ui -bootstrap-expect=1 -data-dir=/consul/data -config-dir=/consul/data -client=0.0.0.0
    extra_hosts:
      - "local-post-service:host-gateway"
      - "local-comment-service:host-gateway"
      - "local-authentication-service:host-gateway"

  db:
    image: postgres
    container_name: postgres_container
    restart: always
    ports:
      - "5433:5433"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data
    expose:
      - "5433"
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    command: -p 5433
    networks:
      - db

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - db
